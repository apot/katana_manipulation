<?xml version="1.0"?>
<launch>

<!-- for DEBUG purposes called by hand, include in katana_tabletop_manipulation.launch if stable and move to katana_object_manipulation_launch pkg-->

  <!-- CLUSTER - GRASP - PLANNER: OpenRAVE Grasp Planner -->
	<remap from="/GraspPlanning" to="/openrave_grasp_planner" />
	<node pkg="katana_openrave_grasp_planner" type="openrave_grasp_planner.py" name="openrave_graspplanning" args="--returngrasps=2 --scene=$(find katana_description)/collada/$(env KATANA_TYPE).robot.xml" output="screen"/>
	<!-- to switch off the ik check add: - -ignoreik -->
	<!-- to ask a specific number (eg 10) of grasps add: - -returngrasps=10 -->
	<!-- by default the Planner is set to returngrasps = 1, so it gives the fastes solution -->

 <!-- the katana does not have sensitive grippers -->

  <!-- DATABASE - GRASP - PLANNER -->

  <!-- database-backed grasp planning is now provided directly by the database wrapper node -->
  <!-- which must be started separately -->


  <arg name="use_slip_controllers" default="false"/>

  <!-- hand descriptions -->
  <rosparam command="load" file="$(find katana_object_manipulation_launch)/config/katana_hand_descriptions.yaml"/>

  <!--object manipulator TODO: modify and adjust-->

  <node name="object_manipulator" pkg="katana_object_manipulator"
    type="object_manipulator_node" respawn="false" output="screen">

      <remap from="arm/constraint_aware_ik" to="/katana_constraint_aware_kinematics/get_constraint_aware_ik" />

      <remap from="arm/get_fk" to="/katana_constraint_aware_kinematics/get_fk" />

      <remap from="arm/interpolated_ik" to="/katana_interpolated_ik_motion_plan" />

      <remap from="arm/interpolated_ik_set_params" to="/katana_interpolated_ik_motion_plan_set_params" />

      <remap from="arm/get_ik_solver_info" to="/katana_constraint_aware_kinematics/get_ik_solver_info" />

      <remap from="arm/get_state_validity" to="/environment_server/get_state_validity" />

      <remap from="arm/move_arm" to="/move_arm" />

      <remap from="arm/joint_trajectory" to="katana_arm_controller/joint_trajectory_action" />

      <remap from="arm/hand_posture_execution" to="/gripper_grasp_posture_controller" />

      <remap from="arm/grasp_status" to="/gripper_grasp_status" />

      <param name="default_cluster_planner" value="/openrave_grasp_planner" />
      <param name="default_database_planner" value="/objects_database_node/database_grasp_planning" />

      <param name="randomize_grasps" value="false" />
  </node>

   <!-- joint trajectory normalization -->
   <include file="$(find trajectory_filter_server)/launch/trajectory_unnormalize.launch"/>

<!-- include in katana_manipulation.launch-->
<!-- cluster bounding box finder
 <node name="cluster_bounding_box_finder" pkg="object_manipulator"
    type="cluster_bounding_box_finder_server.py" output="screen" respawn="false" >
	<param name="z_up_frame" value="/katana_base_link" />
  </node>
-->
<include file="$(find kurtana_description)/launch/kurtana_pole_for_safe_katana_usage.launch"/>
kurtana_pole_for_safe_katana_usage.launch


  </launch>
